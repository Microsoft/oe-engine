{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "accwinHasDNSName": {
      "allowedValues": [
        "false",
        "true"
      ],
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to configure VM DNS name."
      },
      "type": "string"
    },
    "accwinIsVanilla": {
      "allowedValues": [
        "false",
        "true"
      ],
      "defaultValue": "false",
      "metadata": {
        "description": "Flag to provision vanilla VM or install OE SDK."
      },
      "type": "string"
    },
    "accwinOSDiskType": {
      "allowedValues": [
        "Premium_LRS",
        "StandardSSD_LRS",
        "Standard_LRS"
      ],
      "defaultValue": "Premium_LRS",
      "metadata": {
        "description": "Type of managed disk to create."
      },
      "type": "string"
    },
    "accwinOSType": {
      "allowedValues": [
        "Linux",
        "Windows"
      ],
      "metadata": {
        "description": "OS type"
      },
      "type": "string"
    },
    "accwinVMSize": {
      "allowedValues": [
        "Standard_DC2s",
        "Standard_DC4s"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine."
      },
      "type": "string"
    },
    "authenticationType": {
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "defaultValue": "password",
      "metadata": {
        "description": "Type of authentication to use on Linux virtual machine."
      },
      "type": "string"
    },
    "bootDiagnostics": {
      "allowedValues": [
        "enable",
        "disable"
      ],
      "defaultValue": "enable",
      "metadata": {
        "description": "Type of authentication to use on the virtual machine."
      },
      "type": "string"
    },
    "diagnosticsStorageAccountKind": {
      "allowedValues": [
        "Storage",
        "StorageV2"
      ],
      "defaultValue": "Storage",
      "metadata": {
        "description": "Type of storage account."
      },
      "type": "string"
    },
    "diagnosticsStorageAccountName": {
      "defaultValue": "none",
      "metadata": {
        "description": "Name of the storage account for diagnostics data."
      },
      "type": "string"
    },
    "diagnosticsStorageAccountNewOrExisting": {
      "allowedValues": [
        "new",
        "existing"
      ],
      "defaultValue": "new",
      "metadata": {
        "description": "Determines whether or not a new storage account should be provisioned."
      },
      "type": "string"
    },
    "diagnosticsStorageAccountResourceGroupName": {
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the resource group for the existing diagnostics storage account."
      },
      "type": "string"
    },
    "diagnosticsStorageAccountType": {
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Type of storage account."
      },
      "type": "string"
    },
    "linuxAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Linux password."
      },
      "type": "securestring"
    },
    "linuxAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines."
      },
      "type": "string"
    },
    "linuxImageOffer": {
      "defaultValue": "",
      "metadata": {
        "description": "Linux image offer."
      },
      "type": "string"
    },
    "linuxImagePublisher": {
      "defaultValue": "",
      "metadata": {
        "description": "Linux image publisher."
      },
      "type": "string"
    },
    "linuxImageSKU": {
      "defaultValue": "",
      "metadata": {
        "description": "Linux image SKU."
      },
      "type": "string"
    },
    "linuxImageSourceUrl": {
      "defaultValue": "",
      "metadata": {
        "description": "Linux image source URL."
      },
      "type": "string"
    },
    "linuxImageVersion": {
      "defaultValue": "latest",
      "metadata": {
        "description": "Linux image version."
      },
      "type": "string"
    },
    "location": {
      "allowedValues": [
        "eastus",
        "westeurope"
      ],
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Sets the location for all resources in the cluster"
      },
      "type": "string"
    },
    "subnetAddress": {
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Sets the subnet of the VM."
      },
      "type": "string"
    },
    "subnetName": {
      "defaultValue": "[concat(resourceGroup().name, '-subnet')]",
      "metadata": {
        "description": "Name of the subnet."
      },
      "type": "string"
    },
    "vnetAddress": {
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "VNET address space"
      },
      "type": "string"
    },
    "vnetName": {
      "defaultValue": "[concat(resourceGroup().name, '-vnet')]",
      "maxLength": 64,
      "metadata": {
        "description": "Name of the virtual network (alphanumeric, hyphen, underscore, period)."
      },
      "minLength": 2,
      "type": "string"
    },
    "vnetNewOrExisting": {
      "allowedValues": [
        "new",
        "existing"
      ],
      "defaultValue": "new",
      "metadata": {
        "description": "Determines whether or not a new virtual network should be provisioned"
      },
      "type": "string"
    },
    "vnetResourceGroupName": {
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the resource group for the existing virtual network."
      },
      "type": "string"
    },
    "windowsAdminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "Windows password."
      },
      "type": "securestring"
    },
    "windowsAdminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Windows Virtual Machines."
      },
      "type": "string"
    },
    "windowsImageOffer": {
      "defaultValue": "",
      "metadata": {
        "description": "Windows image offer."
      },
      "type": "string"
    },
    "windowsImagePublisher": {
      "defaultValue": "",
      "metadata": {
        "description": "Windows image publisher."
      },
      "type": "string"
    },
    "windowsImageSKU": {
      "defaultValue": "",
      "metadata": {
        "description": "Windows image SKU."
      },
      "type": "string"
    },
    "windowsImageSourceUrl": {
      "defaultValue": "",
      "metadata": {
        "description": "Windows image source URL."
      },
      "type": "string"
    },
    "windowsImageVersion": {
      "defaultValue": "latest",
      "metadata": {
        "description": "Windows image version."
      },
      "type": "string"
    }
  },
  "variables": {
    "accwinIndex": 0,
    "accwinNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('accwinNSGName'))]",
    "accwinNSGName": "[concat('accwin', '-nsg')]",
    "accwinOSProfile": {
      "adminPassword": "[parameters('windowsAdminPassword')]",
      "adminUsername": "[parameters('windowsAdminUsername')]",
      "computername": "accwin",
      "customData": "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",
      "windowsConfiguration": "[variables('windowsConfiguration')]"
    },
    "accwinPublicIPAddressName": "[concat('accwin', '-ip')]",
    "accwinStorageProfile": {
      "imageReference": {
        "offer": "[parameters('windowsImageOffer')]",
        "publisher": "[parameters('windowsImagePublisher')]",
        "sku": "[parameters('windowsImageSKU')]",
        "version": "[parameters('windowsImageVersion')]"
      },
      "osDisk": {
        "caching": "ReadWrite",
        "createOption": "FromImage",
        "managedDisk": {
          "storageAccountType": "[parameters('accwinOSDiskType')]"
        }
      }
    },
    "diagnosticsStorageAction": "[if(equals(parameters('bootDiagnostics'), 'disable'), 'nop', parameters('diagnosticsStorageAccountNewOrExisting'))]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": "true",
      "ssh": "json('null')"
    },
    "singleQuote": "'",
    "vnetSubnetID": "[resourceId(parameters('vnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('vnetName'), parameters('subnetName'))]",
    "winScriptArguments": "[concat('$arguments = ', variables('singleQuote'),' ',variables('singleQuote'), ' ; ')]",
    "winScriptSuffix": " $inputFile = '\\AzureData\\CustomData.bin' ; $outputFile = '\\AzureData\\oeWindowsProvision.ps1' ; $inputStream = New-Object System.IO.FileStream $inputFile, ([IO.FileMode]::Open), ([IO.FileAccess]::Read), ([IO.FileShare]::Read) ; $sr = New-Object System.IO.StreamReader(New-Object System.IO.Compression.GZipStream($inputStream, [System.IO.Compression.CompressionMode]::Decompress)) ; $sr.ReadToEnd() | Out-File($outputFile) ; &$outputFile ; ",
    "windowsConfiguration": {
      "provisionVmAgent": "true"
    },
    "windowsExtScript": "[concat('powershell.exe -ExecutionPolicy Unrestricted -command \"', variables('winScriptSuffix'), '\" > \\AzureData\\provisionScript.log 2>&1; exit $LASTEXITCODE')]"
  },
  "resources": [
    {
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "name": "[variables('accwinPublicIPAddressName')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      },
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "name": "[variables('accwinNSGName')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow_22",
            "properties": {
              "access": "Allow",
              "description": "Allow traffic from the Internet to port 22",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22",
              "direction": "Inbound",
              "priority": 200,
              "protocol": "*",
              "sourceAddressPrefix": "Internet",
              "sourcePortRange": "*"
            }
          },
          {
            "name": "Allow_3389",
            "properties": {
              "access": "Allow",
              "description": "Allow traffic from the Internet to port 3389",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389",
              "direction": "Inbound",
              "priority": 201,
              "protocol": "*",
              "sourceAddressPrefix": "Internet",
              "sourcePortRange": "*"
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "2018-06-01",
      "dependsOn": [
        "[variables('accwinPublicIPAddressName')]",
        "[parameters('vnetName')]",
        "[variables('accwinNSGID')]"
      ],
      "location": "[parameters('location')]",
      "name": "[concat('accwin', '-nic')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('accwinPublicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('vnetSubnetID')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('accwinNSGID')]"
        }
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2018-06-01",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', 'accwin', '-nic')]"
      ],
      "location": "[parameters('location')]",
      "name": "accwin",
      "properties": {
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "[equals(parameters('bootDiagnostics'), 'enable')]",
            "storageUri": "[if(equals(parameters('bootDiagnostics'), 'enable'), reference(resourceId(parameters('diagnosticsStorageAccountResourceGroupName'), 'Microsoft.Storage/storageAccounts', parameters('diagnosticsStorageAccountName')), '2018-02-01').primaryEndpoints['blob'], json('null'))]"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('accwinVMSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('accwin', '-nic'))]"
            }
          ]
        },
        "osProfile": "[variables('accwinOSProfile')]",
        "storageProfile": "[variables('accwinStorageProfile')]"
      },
      "tags": {
        "creationSource": "[concat('oe-engine-', 'accwin')]"
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "2018-06-01",
      "condition": "[and(equals(parameters('accwinIsVanilla'), 'false'), equals(parameters('accwinOSType'), 'Linux'))]",
      "dependsOn": [
        "accwin"
      ],
      "location": "[parameters('location')]",
      "name": "[concat('accwin', '/validateLnx')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "publisher": "Microsoft.OSTCExtensions",
        "settings": {
          "commandToExecute": "/bin/bash -c \"secs=600; SECONDS=0; while (( SECONDS < secs )); do if [ -e /opt/azure/acc/completed ]; then if [ $(cat /opt/azure/acc/completed) == ok ]; then /opt/azure/acc/validate.sh; exit $? ; else echo provision failed; cat /opt/azure/acc/deployment.log; exit 1; fi; fi; sleep 20; done; echo validation timeout; exit 1; \""
        },
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.4"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "2018-06-01",
      "condition": "[equals(parameters('accwinOSType'), 'Windows')]",
      "dependsOn": [
        "accwin"
      ],
      "location": "[parameters('location')]",
      "name": "[concat('accwin', '/validateWin')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "commandToExecute": "[variables('windowsExtScript')]"
        },
        "publisher": "Microsoft.Compute",
        "settings": {},
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    },
    {
      "apiVersion": "2018-02-01",
      "name": "pid-daeec781-52c2-488a-85a6-7945b7831056",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      },
      "type": "Microsoft.Resources/deployments"
    },
    {
      "apiVersion": "2018-02-01",
      "condition": "[equals(variables('diagnosticsStorageAction'), 'new')]",
      "kind": "[parameters('diagnosticsStorageAccountKind')]",
      "location": "[parameters('location')]",
      "name": "[parameters('diagnosticsStorageAccountName')]",
      "sku": {
        "name": "[parameters('diagnosticsStorageAccountType')]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "2018-06-01",
      "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]",
      "location": "[parameters('location')]",
      "name": "[parameters('vnetName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddress')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetAddress')]"
            }
          }
        ]
      },
      "type": "Microsoft.Network/virtualNetworks"
    }
  ],
  "outputs": {
    "accwinFQDN": {
      "type": "string",
      "value": ""
    },
    "status": {
      "type": "string",
      "value": ""
    }
  }
}
